name: Wharfie Release

on:
  release:
    types: [published]

env:
  WHARFIE_ARTIFACTS_BUCKET_PREFIX: wharfie-artifacts

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - run: npm run lint
      - run: npm run test
      - run: npm run typecheck
      - run: ./build.js --platform linux --arch x64 && ./dist/wharfie-linux-x64 --help

  release_macos:
    needs: verify
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - name: build darwin-arm64 binary
        run: ./build.js --platform darwin --arch arm64
        env:
          MACOS_CERT_BASE64: ${{ secrets.MACOS_CERT_BASE64 }}
          MACOS_CERT_PASS: ${{ secrets.MACOS_CERT_PASS }}
          MACOS_KEYCHAIN_PASS: ${{ secrets.MACOS_KEYCHAIN_PASS }}
      - name: Upload darwin-arm64 binary to release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/wharfie-darwin-arm64
      - name: build darwin-x64 binary
        run: ./build.js --platform darwin --arch x64
        env:
          MACOS_CERT_BASE64: ${{ secrets.MACOS_CERT_BASE64 }}
          MACOS_CERT_PASS: ${{ secrets.MACOS_CERT_PASS }}
          MACOS_KEYCHAIN_PASS: ${{ secrets.MACOS_KEYCHAIN_PASS }}
      - name: Upload darwin-x64 binary to release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/wharfie-darwin-x64

  release_linux:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - name: build linux-arm64 binary
        run: ./build.js --platform linux --arch arm64
      - name: Upload linux-arm64 binary to release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/wharfie-linux-arm64
      - name: build linux-x64 binary
        run: ./build.js --platform linux --arch x64
      - name: Upload linux-x64 binary to release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/wharfie-linux-x64

  release_windows:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - name: build windows-arm64 binary
        run: ./build.js --platform windows --arch arm64
      - name: Upload windows-arm64 binary to release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/wharfie-windows-arm64.exe
      - name: build windows-x64 binary
        run: ./build.js --platform windows --arch x64
      - name: Upload windows-x64 binary to release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/wharfie-windows-x64.exe

  # Run this after all platform releases complete.
  release_npm:
    if: github.event.release.prerelease == false
    needs:
      - release_macos
      - release_linux
      - release_windows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

  # Run this after all platform releases complete.
  prerelease_npm:
    if: github.event.release.prerelease == true
    needs:
      - release_macos
      - release_linux
      - release_windows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - run: npm publish --tag next --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}