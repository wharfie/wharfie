#!/usr/bin/env node
'use strict';

const fs = require('fs');
const { hideBin } = require('yargs/helpers');
const yargs = require('yargs');
const path = require('path');
const HOME = require('os').homedir();
const CONFIG_DIR = process.env.XDG_CONFIG_HOME || path.join(HOME, '.config');
process.env.CONFIG_PATH = `${CONFIG_DIR}/wharfie.config`;
process.env.LOGGING_FORMAT = 'cli';
process.env.AWS_SDK_LOGGING_LEVEL = 'warn';

require('yargonaut').style('cyan');

const { displayFailure } = require('../cli/output');

const config = require('../cli/config');
if (fs.existsSync(process.env.CONFIG_PATH)) {
  if (
    !(
      process.argv[process.argv.length - 1] === 'config' &&
      process.argv[process.argv.length - 2] === 'wharfie'
    )
  ) {
    try {
      config.setConfig(
        JSON.parse(fs.readFileSync(process.env.CONFIG_PATH).toString())
      );
      config.setEnvironment();
    } catch (err) {
      if (
        process.argv[process.argv.length - 2] !== 'wharfie' &&
        process.argv[process.argv.length - 1] !== 'config'
      ) {
        displayFailure(
          'Failed to load config. Run "wharfie config" to resolve.'
        );
        // eslint-disable-next-line no-process-exit
        process.exit(1);
      }
    }
  }
}

const cli = () => {
  return yargs(hideBin(process.argv))
    .commandDir('../cli/cmds')
    .demandCommand()
    .showHelpOnFail(true)
    .wrap(100)
    .alias('h', 'help')
    .help().argv;
};

if (!process.stdin.isTTY) {
  process.env.stdin = '';
  process.stdin.on('readable', function () {
    const chunk = this.read();
    if (chunk !== null) {
      process.env.stdin += chunk;
    }
  });
  process.stdin.on('end', () => {
    cli();
  });
} else {
  cli();
}
